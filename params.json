{"name":"Angular-feedback","tagline":"Feedback directive similar to Google Feedback","body":"# angular-feedback\r\n\r\nFeedback directive similar to Google Feedback\r\n\r\nThis directive was built using [ivoviz's](http://github.com/ivoviz) feedback repo.\r\n\r\n## Install\r\n\r\n`bower install angular-send-feedback`\r\n\r\n## Dependencies\r\n\r\n* jQuery\r\n* html2canvas\r\n\r\n## Use\r\n\r\n`<angular-feedback options=\"options\"></angular-feedback>`\r\n\r\nThe options attribute is connected to a `$scope` value in your controller, you can use this object to change/modify any of the options listed below.\r\n\r\n## Post Data\r\n\r\nThe information from the client will be sent through ajax post request. The information is in JSON format.\r\n\r\n* `post.browser` - Browser information.\r\n* `post.url` - The page URL.\r\n* `post.note` - Description of the feedback.\r\n* `post.img` - The screenshot of the feedback. - **base64 encoded data URI!**\r\n* `post.html` - The structure of the page.\r\n\r\n## Options\r\n\r\n### ajaxURL (String)\r\n\r\nThe URL where the plugin will post the screenshot and additional informations. (JSON datatype)\r\n\r\n`Default: ''`\r\n\r\n### postBrowserInfo (Boolean)\r\n\r\nWhether you want your client to post their browser information (such as useragent, plugins used, etc.)\r\n\r\n`Default: true`\r\n\r\n### postHTML (Boolean)\r\n\r\nWhether you want your client to post the page's HTML structure.\r\n\r\n`Default: true`\r\n\r\n### postURL (Boolean)\r\n\r\nWhether you want your client to post the URL of the page.\r\n\r\n`Default: true`\r\n\r\n### proxy (String)\r\n\r\nUrl to the proxy which is to be used for loading cross-origin images. If left empty, cross-origin images won't be loaded.\r\n\r\n`Default: ''`\r\n\r\n### letterRendering (Boolean)\r\n\r\nWhether to render each letter seperately. Necessary if letter-spacing is used.\r\n\r\n`Default: false`\r\n\r\n### initButtonText (String / HTML)\r\n\r\nThe default button text.\r\n\r\n`Default: Send feedback`\r\n\r\n### strokeStyle (String / HEX color)\r\n\r\nThe color of the highlight border. You can use values either like 'black', 'red', etc. or HEX codes like '#adadad'.\r\n\r\n`Default: black`\r\n\r\n### shadowColor (String / HEX color)\r\n\r\nThe color of the shadow.\r\n\r\n`Default: black`\r\n\r\n### shadowOffsetX / shadowOffsetY (Integer)\r\n\r\nSets the horizontal / vertical distance of the shadow from the shape.\r\n\r\n`Default: 1`\r\n\r\n### shadowBlur (Integer)\r\n\r\nThe blur level for the shadow.\r\n\r\n`Default: black`\r\n\r\n### lineJoin (String)\r\n\r\nSets the type of corner created, when two lines meet.\r\n\r\n`Default: bevel`\r\n\r\n### lineWidth (Integer)\r\n\r\nSets border of the highlighted area.\r\n\r\n`Default: 3`\r\n\r\n### html2canvasURL (String)\r\n\r\nThe URL where the plugin can download html2canvas.js from.\r\n\r\n`Default: html2canvas.js`\r\n\r\n### tpl.description / tpl.highlighter / tpl.overview / tpl.submitSuccess / tpl.submitError (String / HTML)\r\n\r\nThe template of the plugin. You could change it any time, but keep in mind to keep the elements' ids and classes so the script won't break.\r\n\r\n`Default: ...`\r\n\r\n### onClose (Function)\r\n\r\nFunction that runs when you close the plugin.\r\n\r\n`Default: null`\r\n\r\n### screenshotStroke (Boolean)\r\n\r\nChanging to `false` will remove the borders from the highlighted areas when taking the screenshot.\r\n\r\n`Default: true`\r\n\r\n### highlightElement (Boolean)\r\n\r\nBy default when you move your cursor over an element the plugin will temporarily highlight it until you move your cursor out of that area.\r\nI'm not exactly sure whether it's a good thing or not, but Google has it, so yeah.\r\n\r\n`Default: true`\r\n\r\n### initialBox (Boolean)\r\n\r\nBy Setting this true the user will have to describe the bug/idea before being able to highlight the area.\r\n\r\n`Default: false`\r\n\r\n### feedbackButton (String)\r\n\r\nDefine a custom button instead of the default button that appears on the lower right corner.\r\n\r\n`Default: .feedback-btn`\r\n\r\n### showDescriptionModal (Boolean)\r\n\r\nSets whether the next modal for entering description should appear or not\r\n\r\n`Default: true`\r\n\r\n### onScreenshotTaken (Function)\r\n\r\nA callback function to be called when clicking on take screenshot button. The callback function's prototype is `function(post)`\r\n\r\n`Default: {}`\r\n\r\n### isDraggable (Boolean)\r\n\r\nSets whether the user will be able to drag the feedback options modal or not\r\n\r\n`Default: true`\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}